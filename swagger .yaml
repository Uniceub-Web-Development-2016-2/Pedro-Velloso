swagger: '2.0'

info:
  version: "1.0.0"
  title: <Lab e-Sports API>
  description : Aplicação Web que visa a organização de eventos e-Sports tanto no ambiente online quanto presencial.
  
host: localhost
basePath: /v1
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json

parameters:
  user-id:
    name: user-id
    in: path
    description: The user id
    required : true
    type : number
    format : integer
    
  events-id:  
    name: events-id
    in: path
    description: The events id.
    required: true
    type: number
    format: integer

  games-id:
    name: games-id
    in: path
    description: The games id.
    required: true
    type: number
    format: integer
    
  news-id:
    name: news-id
    in: path
    description: The news id.
    required: true
    type: number
    format: integer

paths:

  /user:
    get:
      tags:
      - User
      description: |
        Get informations about all users.
      consumes: 
      - application/json
      parameters:
         -
          name: username
          in: query
          description: The user name.
          required: false
          type: string

      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/User'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
    post:
      tags:
      - User
      description: |
        Create a new user.
      consumes: 
      - application/json
      produces:
        - application/json
      parameters:
        -
          in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: User created
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/User'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
  /user/{user-id}:
    get:
      tags:
      - User
      description: |
        Get informations about a user especific.
      consumes: 
      - application/json
      parameters:
        -
          name: user-id
          in: path
          description: The user identificador.
          required: true
          type: number
          format: integer
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/User'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
    put:
      tags:
      - User
      description: |
        Change informations about a user especific.
      consumes: 
      - application/json
      parameters:
        - $ref: '#/parameters/user-id'
        -
          in: body
          name: informations-user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/User'
        
        403:
          description: Forbidden
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
        406:
          description: Not Acceptable
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
  /user/{user-id}/events:
    get:
      tags:
      - User
      - events
      description: |
        Get informations about a events from the user.
      consumes: 
      - application/json  
      parameters:
        - $ref: '#/parameters/user-id'
        -
          name: events-id
          in: query
          description: The events from user.
          required: false
          type: number
          format: integer

      
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/events'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                

  /events/{events-id}/games:
    get:
      tags:
      - events
      - games
      description: |
        Get informations about the gamess from the events.
      parameters:
        - $ref: '#/parameters/events-id'
          
        -
          name: games-name
          in: query
          description: The games name
          required: false
          type : string

      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/events'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
  /events:
    get:
      tags:
      - events
      description: |
        Get informations about all eventss.
      parameters:
        -
          name: events-id
          in: query
          description: The events id.
          required: false
          type: number
          format: integer
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/games'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
    post:
      tags:
      - events
      description: |
        Create a new events.
      consumes: 
      - application/json
      produces:
      - application/json
      parameters:
        -
          in: body
          name: events
          required: true
          schema:
            $ref: '#/definitions/events'
      responses:
        200:
          description: events created
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/events'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
  /events/{events-id}:
    get:
      tags:
      - events
      description: |
        Get informations about the events especific.
    
      parameters:
        - $ref: '#/parameters/events-id'
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/events'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
                
    put:
      tags:
      - events
      description: |
        Change informations about a events especific.
      consumes: 
      - application/json
      parameters:
        - $ref: '#/parameters/events-id'
        -
          in: body
          name: informations-events
          required: true
          schema:
            $ref: '#/definitions/events'
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/events'
        403:
          description: Forbidden
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
        406:
          description: Not Acceptable
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
  /games:
    get:
      tags:
      - games
      description: |
        Get informations about all games.
      parameters:
        -
          name: games-id
          in: query
          description: The games id.
          required: false
          type: number
          format: integer
        -
          name: name
          in: query
          description: Name of games.
          required: false
          type: number
          format: integer
      
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/games'
                
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
                
    post:
      tags:
      - games
      description: |
        Create a new games.
      consumes: 
      - application/json
      produces:
      - application/json
      parameters:
        -
          in: body
          name: games
          required: true
          schema:
            $ref: '#/definitions/games'
      responses:
        200:
          description: games created
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/games'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
                
                
  /games/{games-id}:
    get:
      tags:
      - games
      description: |
        Get informations about the game especific.
      parameters:
        - $ref: '#/parameters/games-id'
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/games'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'


                
    put:
      tags:
      - games
      description: |
        Change informations about a games especific.
      consumes: 
      - application/json
      parameters:
        - $ref: '#/parameters/games-id'
        -
          in: body
          name: informations-games
          required: true
          schema:
            $ref: '#/definitions/games'
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/games'
        403:
          description: Forbidden
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
        406:
          description: Not Acceptable
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
 
                
  /news:
    get:
      tags:
      - news
      description: |
        Get informations about all news.
      parameters:

        -
          name: name
          in: query
          description: Name of news.
          required: false
          type: string

      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/news'
                
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
                
    post:
      tags:
      - news
      description: |
        Create a new news.
      consumes: 
      - application/json
      produces:
      - application/json
      parameters:
        -
          in: body
          name: news
          required: true
          schema:
            $ref: '#/definitions/news'
      responses:
        200:
          description: news created
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/User'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
                
  /news/{news-id}:
    get:
      tags:
      - news
      description: |
        Get informations about the object especific.
      parameters:
        - $ref: '#/parameters/news-id'
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/news'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
    put:
      tags:
      - news
      description: |
        Change informations about a news especific.
      consumes: 
      - application/json
      parameters:
        - $ref: '#/parameters/news-id'
        -
          in: body
          name: informations-news
          required: true
          schema:
            $ref: '#/definitions/news'
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/games'
        403:
          description: Forbidden
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
        406:
          description: Not Acceptable
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'
                
                
  /location/{location-id}:
    get:
      tags:
      - Location
      description: |
        Get informations about a location.
      consumes: 
      - application/json
      parameters:
      -
        name: location-id
        description: Location id
        in: path
        type: integer
        required: true

      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Location'
        404:
          description: Not found
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/ErrorModel'

  
################################################################################
#                                     definitions                              #
################################################################################  
    
definitions:
  User:
    type: object
    required:
    - name
    - username
    - e-mail
    - type
    - password
    - situation
    properties:
      id:
        type : integer
      name:
        type: string
      username:
        type: string
      e-mail:
        type: string
      type : 
        type : number
        format : int
      password : 
        type : string
      situation :
        type : integer
     
     
  events:
    type: object
    required:
    - name
    - date
    - typeCamp
    - situation
    properties:
      id:
        type: integer
      name:
        type: string
      date:
        type: string
      adressId:
        type: integer
        format: int12
      typeCamp:
        type: integer
        format: int2
      situation:
        type: integer
        format: int2
        

      
  Location:
    type: object
    required:
    - name
    properties:
      id:
        type: string
      name:
        type: string

         
  games:
    type : object
    required:
    - name
    - genre
    - maxPlayers
    - minPlayers
    properties:
      id: 
        type: string
      name : 
        type : string
      genre:
        type : string
        format : double
      maxPlayers:
        type : integer
        format: int2
      minPlayers:
        type: integer
        format: int2
              
  news:
    type : object
    required:
    - name
    - topic
    - text
    properties:
      id : 
        type : string
      name : 
        type : string
      topic:
        type: string
      text:
        type: string
      author:
        type: string
      date:
        type: number
        format: date

        
  ErrorModel:
    type : object
    required:
    - code
    - message
    properties:
      code:
        type : string
      message : 
        type : string
      
    
        
  